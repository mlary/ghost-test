// <auto-generated />
using System;
using GhostProject.App.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GhostProject.App.DbMigrations.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230507115053_AddedCompanyNameToRateTable")]
    partial class AddedCompanyNameToRateTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GhostProject.App.Core.Business.Companies.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyNormalizedName")
                        .HasColumnType("text");

                    b.Property<string>("LinkedInUrl")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("GhostProject.App.Core.Business.Rates.Entities.Rate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("CancelledInterview")
                        .HasColumnType("boolean");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<int>("CommonRating")
                        .HasColumnType("integer");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<Guid>("ConfirmationId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("InterviewRound")
                        .HasColumnType("integer");

                    b.Property<int>("InterviewerInterestRate")
                        .HasColumnType("integer");

                    b.Property<int>("InterviewerListeningRate")
                        .HasColumnType("integer");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("boolean");

                    b.Property<int>("LateInMinutes")
                        .HasColumnType("integer");

                    b.Property<int>("PositionSeniorityLevel")
                        .HasColumnType("integer");

                    b.Property<int>("QuestionsRate")
                        .HasColumnType("integer");

                    b.Property<int>("RecruiterId")
                        .HasColumnType("integer");

                    b.Property<int>("RecruitingType")
                        .HasColumnType("integer");

                    b.Property<int>("VisitedLinkedInProfile")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RecruiterId");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("GhostProject.App.Core.Business.Recruiters.Entities.Recruiter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LinkedInUrl")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("LinkedInUrl")
                        .IsUnique();

                    b.ToTable("Recruiters");
                });

            modelBuilder.Entity("GhostProject.App.Core.Business.Rates.Entities.Rate", b =>
                {
                    b.HasOne("GhostProject.App.Core.Business.Companies.Entities.Company", "Company")
                        .WithMany("Rates")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GhostProject.App.Core.Business.Recruiters.Entities.Recruiter", "Recruiter")
                        .WithMany("Rates")
                        .HasForeignKey("RecruiterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Recruiter");
                });

            modelBuilder.Entity("GhostProject.App.Core.Business.Recruiters.Entities.Recruiter", b =>
                {
                    b.HasOne("GhostProject.App.Core.Business.Companies.Entities.Company", "Company")
                        .WithMany("Recruiters")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Company");
                });

            modelBuilder.Entity("GhostProject.App.Core.Business.Companies.Entities.Company", b =>
                {
                    b.Navigation("Rates");

                    b.Navigation("Recruiters");
                });

            modelBuilder.Entity("GhostProject.App.Core.Business.Recruiters.Entities.Recruiter", b =>
                {
                    b.Navigation("Rates");
                });
#pragma warning restore 612, 618
        }
    }
}
